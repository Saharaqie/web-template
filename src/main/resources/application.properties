#开启h2数据库console访问
spring.h2.console.enabled=true
##################################################################### datasource-1 #####################################################################
#spring datasource
spring.datasource.druid.one.name=one
spring.datasource.druid.one.type=com.alibaba.druid.pool.DruidDataSource
#MySQL
#spring.datasource.druid.one.url=jdbc:mysql://localhost:3306/test1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
#spring.datasource.druid.one.username=root
#spring.datasource.druid.one.password=wanghao
#spring.datasource.druid.one.driver-class-name=com.mysql.cj.jdbc.Driver
#H2
spring.datasource.druid.one.url=jdbc:h2:mem:test1
spring.datasource.druid.one.username=sa
spring.datasource.druid.one.password=sa
spring.datasource.druid.one.driver-class-name=org.h2.Driver
#Druid连接池的配置信息
#初始化连接大小
spring.datasource.druid.one.initialSize=5
#最小连接池数量
spring.datasource.druid.one.minIdle=5
#最大连接池数量
spring.datasource.druid.one.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.one.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.one.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.one.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql
spring.datasource.druid.one.validationQuery=SELECT 1 FROM DUAL
#检测连接是否有效的超时时间，单位是秒
spring.datasource.druid.one.validationQueryTimeout=1
#申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
spring.datasource.druid.one.testWhileIdle=true
#获取连接时执行检测，建议关闭，影响性能
spring.datasource.druid.one.testOnBorrow=false
#归还连接时执行检测，建议关闭，影响性能
spring.datasource.druid.one.testOnReturn=false
#连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
spring.datasource.druid.one.keepAlive=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.one.poolPreparedStatements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.one.maxPoolPreparedStatementPerConnectionSize=-1
#配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
spring.datasource.druid.one.filters=stat,wall,log4j
#通过connectProperties属性来打开mergeSql功能;慢SQL记录
spring.datasource.druid.one.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
########################################################################################################################################################
##################################################################### datasource-2 #####################################################################
#spring datasource
spring.datasource.druid.two.name=two
spring.datasource.druid.two.type=com.alibaba.druid.pool.DruidDataSource
#MySQL
#spring.datasource.druid.two.url=jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
#spring.datasource.druid.two.username=root
#spring.datasource.druid.two.password=wanghao
#spring.datasource.druid.two.driver-class-name=com.mysql.cj.jdbc.Driver
#H2
spring.datasource.druid.two.url=jdbc:h2:mem:test2
spring.datasource.druid.two.username=sa
spring.datasource.druid.two.password=sa
spring.datasource.druid.two.driver-class-name=org.h2.Driver
#Druid连接池的配置信息
#初始化连接大小
spring.datasource.druid.two.initialSize=5
#最小连接池数量
spring.datasource.druid.two.minIdle=5
#最大连接池数量
spring.datasource.druid.two.maxActive=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.two.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.two.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.two.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql
spring.datasource.druid.two.validationQuery=SELECT 1 FROM DUAL
#检测连接是否有效的超时时间，单位是秒
spring.datasource.druid.two.validationQueryTimeout=1
#申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
spring.datasource.druid.two.testWhileIdle=true
#获取连接时执行检测，建议关闭，影响性能
spring.datasource.druid.two.testOnBorrow=false
#归还连接时执行检测，建议关闭，影响性能
spring.datasource.druid.two.testOnReturn=false
#连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
spring.datasource.druid.two.keepAlive=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.two.poolPreparedStatements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.two.maxPoolPreparedStatementPerConnectionSize=-1
#配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
spring.datasource.druid.two.filters=stat,wall,log4j
#通过connectProperties属性来打开mergeSql功能;慢SQL记录
spring.datasource.druid.two.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
########################################################################################################################################################